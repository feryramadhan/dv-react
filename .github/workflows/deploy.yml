name: CI/CD Pipeline for React Vite App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test
        env:
          CI: true

      - name: Create deployment package
        run: |
          # Create the tar archive in the current directory
          tar -czf deploy.tar.gz --exclude='node_modules' --exclude='.git' .
          # Verify the archive was created
          ls -la deploy.tar.gz

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deploy-artifact
          path: deploy.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download deployment package
        uses: actions/download-artifact@v4
        with:
          name: deploy-artifact

      - name: Deploy to Ubuntu EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          script: |
            # Create deployment directory if it doesn't exist
            mkdir -p ~/app-deploy
            
            # Clean up previous deployment files
            rm -rf ~/app-deploy/*
          
      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.KEY }}
          source: "deploy.tar.gz"
          target: "~/app-deploy"
          
      - name: Build and run Docker container on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          script: |
            # Extract the deployment package
            cd ~/app-deploy
            tar -xzf deploy.tar.gz
            
            # Build Docker image using our existing Dockerfile
            docker build -t react-vite-app:latest .
            
            # Stop and remove any existing container
            docker stop react-container || true
            docker rm react-container || true
            
            # Run new container
            # Note: We're mapping port 80 to 3000 for external access
            docker run -d --name react-container -p 80:3000 react-vite-app:latest
            
            # Clean up unused images
            docker image prune -af